{"title":"LAPD Call Prediction for Fun (and Prophet)","markdown":{"yaml":{"title":"LAPD Call Prediction for Fun (and Prophet)","description":" Predicting LAPD police call demand using the Prophet time series forecasting library ","date":"11/05/2020","jupyter":"python3","categories":["data-science","forecasting","crime"]},"headingText":"Data Cleaning and Aggregating","containsRefs":false,"markdown":"\n\nTime series prediction is more complicated than I originally anticipated when I tackled the subject during my thesis - while you can treat the events independently, like geographic data, *everything* is related: what happened yesterday will affect what happened today, and a Friday in July is not the same as a Monday in October.\n<!-- TEASER_END -->\n\n\nThere are various weird and wonderful algorithms to cope with these complexities, but Facebook's open source Prophet does a fantastic job of providing a \"fire and forget\" solution that just *works*.  \n\nThis is the code extract from [my Medium blog here](https://towardsdatascience.com/predicting-police-call-demand-for-fun-and-prophet-2e278828a1a1).\n\nWe'll be using four years of LAPD call data, aggregated to hourly intervals.  Prophet actually copes with various intervals quite well, so don't worry too much about how you do yours: just try and keep regular intervals, without too many missings bits.\n\nYour final cleaned data-set must contain the below two columns, ds and y.  Everything else, Prophet will deal with.\n\n##Fitting and Deploying\nProphet works similar to most Python sklearn type implementations - just fit the data and you're off.\n\nHelpfully, it will also make you a data-frame containing future dates for you to predict on.  It will also provide a breakdown of seasonality trends.\n\n## Diagnostics and Cross Validation\nHelpfully, Prophet also contains cross-validation functionality - and performs quite well, very quickly!\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"lapd_and_prophet.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.78","theme":"cyborg","title-block-banner":true,"title":"LAPD Call Prediction for Fun (and Prophet)","description":" Predicting LAPD police call demand using the Prophet time series forecasting library ","date":"11/05/2020","jupyter":"python3","categories":["data-science","forecasting","crime"]},"extensions":{"book":{"multiFile":true}}}}}